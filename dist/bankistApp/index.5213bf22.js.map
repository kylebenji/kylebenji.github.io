{"mappings":"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","sources":["src/bankistApp/script.js"],"sourcesContent":["\"use strict\";\n\n// Data\nconst account1 = {\n  owner: \"Jonas Schmedtmann\",\n  movements: [200, 450.59, -400, 3000, -650, -130, 70.34, 1300],\n  interestRate: 1.2, // %\n  pin: 1111,\n\n  movementsDates: [\n    \"2019-11-18T21:31:17.178Z\",\n    \"2019-12-23T07:42:02.383Z\",\n    \"2020-01-28T09:15:04.904Z\",\n    \"2020-04-01T10:17:24.185Z\",\n    \"2020-05-08T14:11:59.604Z\",\n    \"2023-04-01T17:01:17.194Z\",\n    \"2023-04-05T23:36:17.929Z\",\n    \"2023-04-06T10:51:36.790Z\",\n  ],\n  currency: \"EUR\",\n  locale: \"pt-PT\", // de-DE\n};\n\nconst account2 = {\n  owner: \"Jessica Davis\",\n  movements: [5000, 3400, -150, -790.66, -3210, -1000, 8500.75, -30],\n  interestRate: 1.5,\n  pin: 2222,\n\n  movementsDates: [\n    \"2019-11-01T13:15:33.035Z\",\n    \"2019-11-30T09:48:16.867Z\",\n    \"2019-12-25T06:04:23.907Z\",\n    \"2020-01-25T14:18:46.235Z\",\n    \"2020-02-05T16:33:06.386Z\",\n    \"2020-04-10T14:43:26.374Z\",\n    \"2020-06-25T18:49:59.371Z\",\n    \"2020-07-26T12:01:20.894Z\",\n  ],\n  currency: \"USD\",\n  locale: \"en-US\",\n};\n\nconst account3 = {\n  owner: \"Steven Thomas Williams\",\n  movements: [200, -200.97, 340, -300, -20.01, 50, 400, -460],\n  interestRate: 0.7,\n  pin: 3333,\n\n  movementsDates: [\n    \"2019-11-18T21:31:17.178Z\",\n    \"2019-12-23T07:42:02.383Z\",\n    \"2020-01-28T09:15:04.904Z\",\n    \"2020-04-01T10:17:24.185Z\",\n    \"2020-05-08T14:11:59.604Z\",\n    \"2020-05-27T17:01:17.194Z\",\n    \"2020-07-11T23:36:17.929Z\",\n    \"2020-07-12T10:51:36.790Z\",\n  ],\n  currency: \"GPB\",\n  locale: \"en-GB\", // de-DE\n};\n\nconst account4 = {\n  owner: \"Sarah Smith\",\n  movements: [430.43, 1000, 700, 50.76, 90],\n  interestRate: 1,\n  pin: 4444,\n\n  movementsDates: [\n    \"2019-11-01T13:15:33.035Z\",\n    \"2019-11-30T09:48:16.867Z\",\n    \"2019-12-25T06:04:23.907Z\",\n    \"2020-01-25T14:18:46.235Z\",\n    \"2020-02-05T16:33:06.386Z\",\n  ],\n  currency: \"EUR\",\n  locale: \"es-ES\",\n};\n\nconst accounts = [account1, account2, account3, account4];\n\n// Elements\nconst labelWelcome = document.querySelector(\".welcome\");\nconst labelDate = document.querySelector(\".date\");\nconst labelBalance = document.querySelector(\".balance__value\");\nconst labelSumIn = document.querySelector(\".summary__value--in\");\nconst labelSumOut = document.querySelector(\".summary__value--out\");\nconst labelSumInterest = document.querySelector(\".summary__value--interest\");\nconst labelTimer = document.querySelector(\".timer\");\n\nconst containerApp = document.querySelector(\".app\");\nconst containerMovements = document.querySelector(\".movements\");\n\nconst btnLogin = document.querySelector(\".login__btn\");\nconst btnTransfer = document.querySelector(\".form__btn--transfer\");\nconst btnLoan = document.querySelector(\".form__btn--loan\");\nconst btnClose = document.querySelector(\".form__btn--close\");\nconst btnSort = document.querySelector(\".btn--sort\");\n\nconst inputLoginUsername = document.querySelector(\".login__input--user\");\nconst inputLoginPin = document.querySelector(\".login__input--pin\");\nconst inputTransferTo = document.querySelector(\".form__input--to\");\nconst inputTransferAmount = document.querySelector(\".form__input--amount\");\nconst inputLoanAmount = document.querySelector(\".form__input--loan-amount\");\nconst inputCloseUsername = document.querySelector(\".form__input--user\");\nconst inputClosePin = document.querySelector(\".form__input--pin\");\n\n//helper functions\n//format and create html elements for all movements\nconst displayMovements = function (account, sort) {\n  let movements = account.movements;\n  containerMovements.innerHTML = \"\";\n  const movs = sort ? movements.slice().sort((a, b) => a - b) : movements;\n  movs.forEach(function (mov, i) {\n    const type = mov > 0 ? \"deposit\" : \"withdrawal\";\n\n    const date = new Date(account.movementsDates[i]);\n\n    const html = `\n    <div class=\"movements__row\">\n      <div class=\"movements__type movements__type--${type}\">${\n      i + 1\n    } ${type}</div>\n      <div class=\"movements__date\">${formatDate(\n        account,\n        date,\n        false,\n        true\n      )}</div>\n      <div class=\"movements__value\">${formatCurrency(\n        account,\n        mov.toFixed(2)\n      )}</div>\n    </div>\n    `;\n    containerMovements.insertAdjacentHTML(\"afterbegin\", html);\n  });\n};\n\n//calculate total balance and display\nconst calcPrintBalance = function (account) {\n  const balance = account.movements.reduce(function (acc, mov) {\n    return acc + mov;\n  }, 0);\n  account.balance = balance;\n  labelBalance.textContent = `${formatCurrency(account, balance.toFixed(2))}`;\n  labelDate.textContent = formatDate(account, new Date());\n};\n\n//update in/out/interest sums\nconst updateSums = function (account) {\n  let movements = account.movements;\n  //calculate total deposits\n  let inSum = movements\n    .filter(function (mov) {\n      return mov > 0;\n    })\n    .reduce(function (acc, mov) {\n      return acc + mov;\n    }, 0);\n\n  //calculate total withdrawals\n  let outSum = movements\n    .filter(function (mov) {\n      return mov < 0;\n    })\n    .reduce(function (acc, mov) {\n      return acc + mov;\n    }, 0);\n  labelSumIn.textContent = `${formatCurrency(account, inSum.toFixed(2))}`;\n  labelSumOut.textContent = `${formatCurrency(\n    account,\n    Math.abs(outSum).toFixed(2)\n  )}`;\n\n  //calculate total interest\n  const interest = movements\n    .filter(function (mov) {\n      return mov > 0;\n    })\n    .map(function (dep) {\n      return (dep * account.interestRate) / 100;\n    })\n    .filter(function (int) {\n      return int > 1; //only include interest > $1\n    })\n    .reduce(function (acc, int) {\n      return acc + int;\n    }, 0);\n  labelSumInterest.textContent = `${formatCurrency(\n    account,\n    interest.toFixed(2)\n  )}`;\n};\n\n//individual username creation\nconst createUsername = function (userName) {\n  return userName\n    .toLowerCase()\n    .split(\" \")\n    .map(function (name) {\n      return name[0];\n    })\n    .join(\"\");\n};\n\n//generating usernames\nconst createUsernames = function (accounts) {\n  accounts.forEach(function (account) {\n    account.username = createUsername(account.owner);\n  });\n};\ncreateUsernames(accounts); //call on startup so info is saved when logging in\n\n//combined function for showing the account information\nconst displayBody = function (account) {\n  let movements = account.movements;\n  displayMovements(account);\n  calcPrintBalance(account);\n  updateSums(account);\n};\n\nfunction hideUI() {\n  containerApp.style.opacity = 0;\n}\n\nfunction showUI() {\n  containerApp.style.opacity = 100;\n}\n\n//constants\nconst daysToSimplify = 7; //how many days back to show a count rather than a specific date when simplifying\n\n//variables\nlet currAccount;\n\n//Internationalization\n//Dates\n//options objects\n//complex date format\nconst optionsWTime = {\n  year: \"numeric\",\n  month: \"numeric\",\n  day: \"numeric\",\n  hour: \"numeric\",\n  minute: \"numeric\",\n};\n\n//basic date format\nconst optionsNumeric = {\n  year: \"numeric\",\n  month: \"2-digit\",\n  day: \"2-digit\",\n};\n\n//Dates functions\n//determines the number of days between two dates\nfunction calcDaysBetween(date1, date2) {\n  return Math.round(Math.abs(date2 - date1) / (1000 * 60 * 60 * 24));\n}\n\n//format a date based on account specifications and specific use case\nfunction formatDate(account, date, includeTime = true, simplify = false) {\n  if (simplify) {\n    let timeSince = calcDaysBetween(date, new Date());\n    if (timeSince < daysToSimplify) {\n      if (timeSince === 0) return \"Today\";\n      if (timeSince === 1) return \"Yesterday\";\n      if (timeSince < daysToSimplify) return `${timeSince} days ago`;\n    }\n  }\n  let formattedDate;\n\n  if (includeTime) {\n    formattedDate = new Intl.DateTimeFormat(\n      account.locale,\n      optionsWTime\n    ).format();\n  } else {\n    formattedDate = new Intl.DateTimeFormat(\n      account.locale,\n      optionsNumeric\n    ).format();\n  }\n  return formattedDate;\n}\n\n//get a formatted string for this instant\nfunction nowString() {\n  return new Date().toISOString();\n}\n\n//Numbers formatting\nconst currencyOptions = {\n  style: \"currency\",\n  //actual currency will be set based on account info\n};\n\n//format currency based on account locale and currency\nfunction formatCurrency(account, num) {\n  currencyOptions.currency = account.currency;\n  return new Intl.NumberFormat(account.locale, currencyOptions).format(num);\n}\n\n//Timer function\nlet logoutTimer;\nconst startLogoutTimer = function () {\n  //set time to 5 minutes\n  let time = 300;\n\n  //clear timer if already running\n  clearInterval(logoutTimer);\n\n  //call timer every second\n  const tick = function () {\n    //in each call, print the remaining time to UI\n    labelTimer.textContent = `${Math.floor(time / 60)}:${`${\n      time % 60\n    }`.padStart(2, \"0\")}`;\n\n    //when time is at 0, stop timer, hide UI, log out user\n    if (time === 0) {\n      clearInterval(logoutTimer);\n      hideUI();\n      labelWelcome.textContent = \"Login to get started\";\n      currAccount = null;\n    }\n    time--;\n  };\n  tick();\n  logoutTimer = setInterval(tick, 1000);\n};\n\n//Fake Always logged in\n// currAccount = account1;\n// displayBody(currAccount);\n// showUI();\n\n//Event handlers\nbtnLogin.addEventListener(\"click\", function (event) {\n  //prevent page reload\n  event.preventDefault();\n\n  //find account\n  currAccount = accounts.find(function (acc) {\n    return acc.username === inputLoginUsername.value;\n  });\n\n  //check for correct pin\n  if (currAccount?.pin === +inputLoginPin.value) {\n    //clear inputs\n    inputLoginPin.value = inputLoginUsername.value = \"\";\n    inputLoginPin.blur();\n\n    //display UI and welcome\n    labelWelcome.textContent = `Welcome back, ${\n      currAccount.owner.split(\" \")[0]\n    }`;\n    showUI();\n\n    //display balance, movements, summary\n    displayBody(currAccount);\n\n    //Timer at bottom right\n    startLogoutTimer();\n  }\n});\n\nfunction isValidTransfer(amount, sendAcc, recAcc) {\n  if (recAcc === sendAcc) {\n    return false;\n  }\n  if (sendAcc.balance < amount) {\n    return false;\n  }\n  if (amount < 0) {\n    return false;\n  }\n  if (!recAcc) return false;\n  return true;\n}\n\nbtnTransfer.addEventListener(\"click\", function (e) {\n  //prevent reload\n  e.preventDefault();\n\n  //get transfer amounts and accounts\n  const amount = +inputTransferAmount.value;\n  let recievingAcc = inputTransferTo.value;\n  recievingAcc = accounts.find(function (acc) {\n    return acc.username === recievingAcc;\n  });\n\n  //check if we have enough money and send money\n  if (isValidTransfer(amount, currAccount, recievingAcc)) {\n    currAccount.movements.push(amount * -1);\n    recievingAcc.movements.push(amount);\n    currAccount.movementsDates.push(nowString());\n    recievingAcc.movementsDates.push(nowString());\n    displayBody(currAccount);\n  }\n\n  //clear inputs\n  inputTransferAmount.value = inputTransferTo.value = \"\";\n\n  //restart timer\n  startLogoutTimer();\n});\n\n//bank only grants the loan if there is a single deposit greater than 10% of the loan amount\nbtnLoan.addEventListener(\"click\", function (e) {\n  //prevent page reload\n  e.preventDefault();\n\n  //get loan amount, check if it is a valid amount\n  const loanAmount = Math.floor(+inputLoanAmount.value); //round off decimals\n  if (\n    loanAmount > 0 &&\n    currAccount.movements.some(function (mov) {\n      return mov >= loanAmount / 10;\n    })\n  ) {\n    setTimeout(function () {\n      currAccount.movements.push(loanAmount);\n      currAccount.movementsDates.push(nowString());\n      displayBody(currAccount);\n    }, 2500); //adding timeout to simulate an approval process\n  }\n\n  //clear inputs\n  inputLoanAmount.value = \"\";\n\n  //restart timer\n  startLogoutTimer();\n});\n\nbtnClose.addEventListener(\"click\", function (e) {\n  //prevent reload\n  e.preventDefault();\n\n  //check if credentials are correct\n  if (\n    currAccount.username === inputCloseUsername.value &&\n    currAccount.pin === +inputClosePin.value\n  ) {\n    //delete account, hide UI\n    const index = accounts.findIndex(function (acc) {\n      return acc.username === currAccount.username;\n    });\n    accounts.splice(index, 1);\n    hideUI();\n  }\n\n  //clear inputs\n  inputClosePin.value = inputCloseUsername.value = \"\";\n});\n\n//global so it persists across clicks\nlet sorting = false;\nbtnSort.addEventListener(\"click\", function (e) {\n  //prevent reload\n  e.preventDefault();\n\n  //sort movements\n  displayMovements(currAccount, !sorting);\n\n  //toggle sorting variable so it will toggle sorting if clicked again\n  sorting = !sorting;\n\n  //restart timer\n  startLogoutTimer();\n});\n"],"names":["account1","owner","movements","interestRate","pin","movementsDates","currency","locale","account2","account3","account4","accounts","labelWelcome","document","querySelector","labelDate","labelBalance","labelSumIn","labelSumOut","labelSumInterest","labelTimer","containerApp","containerMovements","btnLogin","btnTransfer","btnLoan","btnClose","btnSort","inputLoginUsername","inputLoginPin","inputTransferTo","inputTransferAmount","inputLoanAmount","inputCloseUsername","inputClosePin","displayMovements","account","sort","innerHTML","slice","a","b","forEach","mov","i","type","date","Date","html","formatDate","formatCurrency","toFixed","insertAdjacentHTML","calcPrintBalance","balance","reduce","acc","textContent","updateSums","inSum","filter","outSum","Math","abs","interest","map","dep","int","createUsername","userName","toLowerCase","split","name","join","createUsernames","username","displayBody","hideUI","style","opacity","showUI","daysToSimplify","currAccount","optionsWTime","year","month","day","hour","minute","optionsNumeric","calcDaysBetween","date1","date2","round","includeTime","simplify","timeSince","formattedDate","Intl","DateTimeFormat","format","nowString","toISOString","currencyOptions","num","NumberFormat","logoutTimer","startLogoutTimer","time","clearInterval","tick","floor","padStart","setInterval","isValidTransfer","amount","sendAcc","recAcc","addEventListener","event","preventDefault","find","value","blur","e","recievingAcc","push","loanAmount","some","setTimeout","index","findIndex","splice","sorting"],"version":3,"file":"index.5213bf22.js.map"}