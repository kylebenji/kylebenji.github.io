{"mappings":"AACA,MAAMA,QAAUC,SAASC,cAAc,SACjCC,WAAaF,SAASC,cAAc,YACpCE,QAAUH,SAASC,cAAc,SAGjCG,MAAQJ,SAASC,cAAc,SAC/BI,SAAWL,SAASC,cAAc,aAClCK,MAAQN,SAASC,cAAc,UAC/BM,QAAUP,SAASC,cAAc,YAGjCO,UAAYC,OAAO,kBAAmB,MACtCC,cAAgBD,OAAO,gBAE7B,SAASE,UAAUC,GAGjB,OAAOC,eAFWC,YAAYF,GAGhC,CAEA,SAASE,YAAYC,GAEnB,OADAC,OAASD,EAAUE,QAAQ,KACpB,CACLC,OAAOH,EAAUI,UAAU,EAAGH,SAC9BE,OAAOH,EAAUI,UAAUH,OAAS,EAAGD,EAAUK,SAErD,CAEA,SAASP,eAAeQ,GACtB,IAAIC,EAAc,GACdC,EAAM,EACNC,EAAUH,EAAY,GACtBI,EAAO,EACX,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAY,GAAIK,IAClCD,EAAOE,KAAKC,MAAMD,KAAKE,SAAWL,GAAW,EAC7CD,GAAOE,EACPH,EAAYQ,KAAK,GAAGL,OAAUD,MAEhC,MAAO,CAACD,EAAKD,EACf,CAEA,SAASS,YAAYC,GAEnB,IAAIC,EAAeD,EAAOE,SAAS1B,WAC/Bc,EAAc,GAClB,IAAK,MAAMa,KAASF,EAAc,CAChC,IAAKR,EAAMb,GAAQD,UAAUwB,EAAM,IACnCb,EAAc,IAAIA,KAAgBV,GAClCoB,EAASA,EAAOI,QAAQD,EAAM,GAAIV,EACpC,CACA,MAAO,CAACO,EAAQV,EAClB,CAEA,SAASe,SAASL,QAEhB,IAAKM,OAAQhB,aAAeS,YAAYC,QAEpCP,KAAO,GAOX,OAFEA,KAJGf,cAAc6B,KAAKD,QAIf,qBAFAE,KAAKF,QAIP,CAACb,KAAMH,YAChB,CAEA,SAASmB,WAAWnB,GAClB,IACIoB,EADAjB,EAAOH,EAAY,GAGrBoB,EADEC,MAAMlB,GACF,0BAEA,gBAAgBE,KAAKC,MAAMH,OAEnCpB,SAASuC,UAAUC,OAAO,UAC1BvC,MAAMwC,YAAcJ,EACpBK,aAAazB,EACf,CAEA,SAASyB,aAAazB,GACpB,IAAIoB,EAAM,gBAAgBpB,EAAY,GAAG,KACzC0B,QAAQC,IAAI3B,GACZ,IAAK,IAAII,EAAI,EAAGA,EAAIJ,EAAY,GAAGF,OAAS,EAAGM,IAC7CgB,GAAO,KAAOpB,EAAY,GAAGI,GAE3BJ,EAAY,GAAGF,OAAS,IAC1BsB,GAAO,WAAapB,EAAY,GAAGA,EAAY,GAAGF,OAAS,IAC7Db,QAAQuC,YAAcJ,CACxB,CAEA3C,QAAQmD,iBAAiB,SAAS,SAAUC,GAC1CA,EAAEC,iBACF,IAAIrC,EAAYX,MAAMiD,MAAMjB,QAAQ,OAAQ,IAC5C/B,SAASuC,UAAUU,IAAI,UACvB/C,QAAQqC,UAAUU,IAAI,UACtBnD,QAAQyC,UAAUU,IAAI,UAEtBb,WADkBJ,SAAStB,GAE7B,IAEAb,WAAWgD,iBAAiB,SAAS,WACnC/C,QAAQyC,UAAUC,OAAO,UACzBtC,QAAQqC,UAAUC,OAAO,SAC3B,IAEA1C,QAAQ+C,iBAAiB,SAAS,WAChC3C,QAAQqC,UAAUU,IAAI,UACtBnD,QAAQyC,UAAUU,IAAI,SACxB","sources":["src/diceRoller/script.js"],"sourcesContent":["//buttons\r\nconst btnRoll = document.querySelector(\".roll\");\r\nconst btnExpound = document.querySelector(\".expound\");\r\nconst btnHide = document.querySelector(\".hide\");\r\n\r\n//elements\r\nconst input = document.querySelector(\".dice\");\r\nconst printout = document.querySelector(\".printout\");\r\nconst print = document.querySelector(\".print\");\r\nconst details = document.querySelector(\".details\");\r\n\r\n//constants\r\nconst oneDieReg = RegExp(/\\d{1,2}d\\d{1,3}/, \"gd\");\r\nconst equationRegEx = RegExp(/[^0-9/*+()-]/);\r\n\r\nfunction handleDie(dice) {\r\n  let diceNumSize = parseOneDie(dice);\r\n  // console.log(diceNumSize);\r\n  return rollOneSizeDie(diceNumSize);\r\n}\r\n\r\nfunction parseOneDie(rollInput) {\r\n  dIndex = rollInput.indexOf(\"d\");\r\n  return [\r\n    Number(rollInput.substring(0, dIndex)),\r\n    Number(rollInput.substring(dIndex + 1, rollInput.length)),\r\n  ];\r\n}\r\n\r\nfunction rollOneSizeDie(diceNumSize) {\r\n  let rollsActual = [];\r\n  let sum = 0;\r\n  let dieSize = diceNumSize[1];\r\n  let roll = 0;\r\n  for (let i = 0; i < diceNumSize[0]; i++) {\r\n    roll = Math.trunc(Math.random() * dieSize) + 1;\r\n    sum += roll;\r\n    rollsActual.push(`${roll} (d${dieSize})`);\r\n  }\r\n  return [sum, rollsActual];\r\n}\r\n\r\nfunction replaceDice(rollIn) {\r\n  //loop through input, replace dice with their actual values so we can evaluate as a mathematical expression\r\n  let strMatchhAll = rollIn.matchAll(oneDieReg);\r\n  let rollsActual = [];\r\n  for (const match of strMatchhAll) {\r\n    let [roll, dice] = handleDie(match[0]);\r\n    rollsActual = [...rollsActual, ...dice];\r\n    rollIn = rollIn.replace(match[0], roll);\r\n  }\r\n  return [rollIn, rollsActual];\r\n}\r\n\r\nfunction rollDice(rollIn) {\r\n  //send to function to replace dice with values in string pass back the actual rolls so we can display them later\r\n  let [repStr, rollsActual] = replaceDice(rollIn);\r\n  //evaluate string as a mathematical expression so we can get roll sum\r\n  let roll = \"\";\r\n  if (!equationRegEx.test(repStr)) {\r\n    //adding some initial protection for this eval(), this should prevent special characters and letters that are not math\r\n    roll = eval(repStr);\r\n  } else {\r\n    roll = \"invalid expression\";\r\n  } //if any errors, fire an error warning\r\n  return [roll, rollsActual];\r\n}\r\n\r\nfunction printRolls(rollsActual) {\r\n  let roll = rollsActual[0];\r\n  let out;\r\n  if (isNaN(roll)) {\r\n    out = `Invalid Roll Expression`;\r\n  } else {\r\n    out = `You rolled a ${Math.trunc(roll)}!!`;\r\n  }\r\n  printout.classList.remove(\"hidden\");\r\n  print.textContent = out;\r\n  printDetails(rollsActual);\r\n}\r\n\r\nfunction printDetails(rollsActual) {\r\n  let out = `You rolled a ${rollsActual[1][0]}`;\r\n  console.log(rollsActual);\r\n  for (let i = 1; i < rollsActual[1].length - 1; i++) {\r\n    out += \", \" + rollsActual[1][i];\r\n  }\r\n  if (rollsActual[1].length > 1)\r\n    out += \", and a \" + rollsActual[1][rollsActual[1].length - 1];\r\n  details.textContent = out;\r\n}\r\n\r\nbtnRoll.addEventListener(\"click\", function (e) {\r\n  e.preventDefault();\r\n  let rollInput = input.value.replace(/\\s+/g, \"\"); //get value from input and trim whitespace\r\n  printout.classList.add(\"hidden\");\r\n  details.classList.add(\"hidden\");\r\n  btnHide.classList.add(\"hidden\");\r\n  let rollsActual = rollDice(rollInput);\r\n  printRolls(rollsActual);\r\n});\r\n\r\nbtnExpound.addEventListener(\"click\", function () {\r\n  btnHide.classList.remove(\"hidden\");\r\n  details.classList.remove(\"hidden\");\r\n});\r\n\r\nbtnHide.addEventListener(\"click\", function () {\r\n  details.classList.add(\"hidden\");\r\n  btnHide.classList.add(\"hidden\");\r\n});\r\n"],"names":["btnRoll","document","querySelector","btnExpound","btnHide","input","printout","print","details","oneDieReg","RegExp","equationRegEx","handleDie","dice","rollOneSizeDie","parseOneDie","rollInput","dIndex","indexOf","Number","substring","length","diceNumSize","rollsActual","sum","dieSize","roll","i","Math","trunc","random","push","replaceDice","rollIn","strMatchhAll","matchAll","match","replace","rollDice","repStr","test","eval","printRolls","out","isNaN","classList","remove","textContent","printDetails","console","log","addEventListener","e","preventDefault","value","add"],"version":3,"file":"index.9c35efca.js.map"}