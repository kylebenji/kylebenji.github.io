{"mappings":"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","sources":["src/controller.js","src/helpers.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","src/model.js","src/data.json","src/views/statsView.js","src/views/upgradePaneView.js"],"sourcesContent":["import * as helpers from \"./helpers.js\";\r\nimport * as model from \"./model.js\";\r\n\r\nimport statsView from \"./views/statsView.js\";\r\nimport upgradePaneView from \"./views/upgradePaneView.js\";\r\n\r\n//functions\r\nconst onionClick = function () {\r\n  //increment onions\r\n  model.addOnions(model.stats.clickStr);\r\n  statsView.updateOnions(model.stats);\r\n\r\n  //increment click count\r\n  model.click();\r\n  statsView.updateTotClicks(model.stats);\r\n};\r\n\r\nconst decrementOnions = function (cost) {\r\n  model.stats.onions -= cost;\r\n  statsView.updateOnions(model.stats);\r\n};\r\n\r\nconst buyClickStrengthUpgrade = function (upgrade, element) {\r\n  if (!element) {\r\n    element = document.querySelector(`#${upgrade}`);\r\n  }\r\n  upgrade = model.state.clickUpgObj[upgrade];\r\n  if (model.stats.onions >= upgrade.cost) {\r\n    decrementOnions(upgrade.cost);\r\n    model.stats.clickStr += upgrade.clickIncrease;\r\n    upgradePaneView.updateCostCount(upgrade, element);\r\n    statsView.updatePerClick(model.stats);\r\n  }\r\n};\r\n\r\nconst buyAutoclicker = function (upgrade, element) {\r\n  if (!element) {\r\n    element = document.querySelector(`#${upgrade}`);\r\n  }\r\n  upgrade = model.state.autoclickObj[upgrade];\r\n  if (model.stats.onions >= upgrade.cost) {\r\n    decrementOnions(upgrade.cost);\r\n    model.stats.onionsPerSec += upgrade.perSecIncrease;\r\n    upgradePaneView.updateCostCount(upgrade, element);\r\n    statsView.updatePerSecond(model.stats);\r\n  }\r\n};\r\n\r\nconst recalculatePerSecond = function () {\r\n  let perSec = 0;\r\n  for (const [clicker, data] of Object.entries(model.state.autoclickObj)) {\r\n    perSec += data.count * data.perSecIncrease;\r\n  }\r\n  console.log(perSec);\r\n  model.stats.onionsPerSec = perSec;\r\n  statsView.updatePerSecond(model.stats);\r\n};\r\n\r\nconst buyAutoclickUp = function (upgrade, element) {\r\n  if (!element) {\r\n    element = document.querySelector(`#${upgrade}`);\r\n  }\r\n  upgrade = model.state.autoclickUpObj[upgrade];\r\n  if (model.stats.onions >= upgrade.cost) {\r\n    decrementOnions(upgrade.cost);\r\n    upgradePaneView.updateCostCount(upgrade, element);\r\n    model.state.autoclickObj[upgrade.upgrades].perSecIncrease +=\r\n      upgrade.increase;\r\n    recalculatePerSecond();\r\n  }\r\n};\r\n\r\nconst buyManager = function (upgrade, element) {\r\n  upgrade = model.state.managersObj[upgrade];\r\n  if (model.canAfford(upgrade.cost) && !upgrade.owned) {\r\n    decrementOnions(upgrade.cost);\r\n    upgrade.owned = upgrade.on = true;\r\n    element.querySelector(\"button\").style.display = \"none\";\r\n    element.querySelector(\".owned\").textContent = `Yes`;\r\n    const toggle = element.querySelector(\".toggleOnOff\");\r\n    element.querySelector(\".slider\").classList.add(\"slider-on\");\r\n    toggle.disabled = false;\r\n    toggle.checked = true;\r\n  }\r\n};\r\n\r\nconst upgBuyMap = new Map([\r\n  [\"click-strength-upgrade\", buyClickStrengthUpgrade],\r\n  [\"autoclicker\", buyAutoclicker],\r\n  [\"autoclickUp\", buyAutoclickUp],\r\n  [\"manager\", buyManager],\r\n]);\r\n\r\nconst buyUpgrade = function (element) {\r\n  let parent = element.closest(\".upgrade\");\r\n  let upgrade = parent.id;\r\n  upgBuyMap.forEach((val, key, map) => {\r\n    if (parent.classList.contains(key)) {\r\n      val(upgrade, parent);\r\n    }\r\n  });\r\n};\r\n\r\nconst toggleManager = function (toggle) {\r\n  let manager = model.state.managersObj[toggle.closest(\".upgrade\").id];\r\n  if (!manager.owned) return;\r\n  manager.on = !manager.on;\r\n  toggle.checked = manager.on ? true : false;\r\n};\r\n\r\n//autochopper\r\nconst autochopFunc = function () {\r\n  model.addOnions(model.stats.onionsPerSec);\r\n  statsView.updateOnions(model.stats);\r\n};\r\n\r\nconst managerPurchaseMap = new Map([\r\n  [\"clickUpgObj\", buyClickStrengthUpgrade],\r\n  [\"autoclickObj\", buyAutoclicker],\r\n  [\"autoclickUpObj\", buyAutoclickUp],\r\n]);\r\n\r\n//managers\r\nconst managerHandler = function () {\r\n  for (const [manager, data] of Object.entries(model.state.managersObj)) {\r\n    if (!data.owned || !data.on) continue;\r\n    for (const upgrade of data.upgrades) {\r\n      console.log(data.upgradeType);\r\n      while (model.canAfford(model.state[data.upgradeType][upgrade].cost)) {\r\n        managerPurchaseMap.get(data.upgradeType)(upgrade);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n//offline onions\r\nconst controlOfflineOnions = function (offlineOnions) {\r\n  alert(`You chopped ${offlineOnions} onions while offline!`);\r\n  model.addOnions(offlineOnions);\r\n  statsView.updateOnions(model.stats);\r\n};\r\n\r\n//init\r\nconst init = function () {\r\n  //load saved data\r\n  model.loadLocalStorage();\r\n\r\n  //calculate offline onions\r\n  const offlineOnions = model.calculateOfflineOnions();\r\n  if (offlineOnions) controlOfflineOnions(offlineOnions);\r\n\r\n  //starting upgrades\r\n  upgradePaneView.generateAllTabsMarkup(model.state);\r\n\r\n  //update displays\r\n  statsView.updateAll(model.stats);\r\n\r\n  //autosave\r\n  const saveInterval = setInterval(model.saveLocalStorage, 5000);\r\n\r\n  //intervals\r\n  const managerInterval = setInterval(managerHandler, 1000);\r\n  const autochopInterval = setInterval(autochopFunc, 1000);\r\n\r\n  //event listeners\r\n  statsView.addHandlerChop(onionClick);\r\n  upgradePaneView.addHandlerBuy(buyUpgrade);\r\n  upgradePaneView.addHandlerToggleManager(toggleManager);\r\n};\r\ninit();\r\n","export const displayNum = function (num) {\r\n  if (num > 1000) return `${num / 1000}k`;\r\n  return num;\r\n};\r\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","import * as data from \"./data.json\";\r\n\r\nexport let stats = {\r\n  onions: 0,\r\n  totalOnions: 0,\r\n  onionsPerSec: 0,\r\n  clickStr: 1,\r\n  numClicks: 0,\r\n  lastSaveTime: new Date().getTime(),\r\n};\r\n\r\nexport let state = data;\r\n\r\nexport const saveLocalStorage = function () {\r\n  stats.lastSaveTime = new Date().getTime();\r\n  localStorage.setItem(\"clickerStats\", JSON.stringify(stats));\r\n  localStorage.setItem(\"clickerData\", JSON.stringify(state));\r\n};\r\n\r\nexport const calculateOfflineOnions = function () {\r\n  return (\r\n    Math.floor((new Date().getTime() - stats.lastSaveTime) / 1000) *\r\n    stats.onionsPerSec\r\n  );\r\n};\r\n\r\nexport const loadLocalStorage = function () {\r\n  statsLocal = JSON.parse(localStorage.getItem(\"clickerStats\"));\r\n  if (statsLocal) {\r\n    stats = statsLocal;\r\n  }\r\n  dataLocal = JSON.parse(localStorage.getItem(\"clickerData\"));\r\n  if (dataLocal) {\r\n    state = dataLocal;\r\n  }\r\n};\r\n\r\nexport const canAfford = function (price) {\r\n  return price < stats.onions;\r\n};\r\n\r\nexport const addOnions = function (num) {\r\n  stats.onions += num;\r\n  stats.totalOnions += num;\r\n};\r\n\r\nexport const click = function () {\r\n  stats.numClicks += 1;\r\n};\r\n","{\r\n  \"clickUpgObj\": {\r\n    \"paringKnife\": {\r\n      \"name\": \"Paring Knife\",\r\n      \"description\": \"Just a lil knife. Increases click strength by 1\",\r\n      \"count\": 0,\r\n      \"cost\": 10,\r\n      \"clickIncrease\": 1\r\n    },\r\n    \"chefsKnife\": {\r\n      \"name\": \"Chef's Knife\",\r\n      \"description\": \"Now we're talking! Increase click strength by 5\",\r\n      \"count\": 0,\r\n      \"cost\": 100,\r\n      \"clickIncrease\": 5\r\n    },\r\n    \"knifeTraining\": {\r\n      \"name\": \"Train knife skills\",\r\n      \"description\": \"Chop faster! Increases click strength by 10\",\r\n      \"count\": 0,\r\n      \"cost\": 500,\r\n      \"clickIncrease\": 10\r\n    },\r\n    \"ambidextrous\": {\r\n      \"name\": \"Ambidexterity\",\r\n      \"description\": \"Work with both hands! Increases click strength by 25\",\r\n      \"count\": 0,\r\n      \"cost\": 1000,\r\n      \"clickIncrease\": 25\r\n    },\r\n    \"armGlaives\": {\r\n      \"name\": \"Full Arm Glaives\",\r\n      \"description\": \"Full arm knives like Batman, increases click strength by 100\",\r\n      \"count\": 0,\r\n      \"cost\": 1500,\r\n      \"clickIncrease\": 100\r\n    },\r\n    \"headbutting\": {\r\n      \"name\": \"Headbutting\",\r\n      \"description\": \"You've figured out how to headbutt onions into a perfect dice! Increases click strength by 250\",\r\n      \"count\": 0,\r\n      \"cost\": 8600,\r\n      \"clickIncrease\": 250\r\n    },\r\n    \"ninjaTraining\": {\r\n      \"name\": \"Ninja Training\",\r\n      \"description\": \"Take a break to train with ninjas! Increases click strength by 500\",\r\n      \"count\": 0,\r\n      \"cost\": 12000,\r\n      \"clickIncrease\": 500\r\n    },\r\n    \"oneWithTheOnion\": {\r\n      \"name\": \"One with the Onion\",\r\n      \"description\": \"Become One with the onion, let the knowledge of its layers flow through you. Increases click strength by 1250\",\r\n      \"count\": 0,\r\n      \"cost\": 40000,\r\n      \"clickIncrease\": 1250\r\n    },\r\n    \"ogres\": {\r\n      \"name\": \"Ogres\",\r\n      \"description\": \"Ogres are like onions. Increases click strength by 5000\",\r\n      \"count\": 0,\r\n      \"cost\": 110000,\r\n      \"clickIncrease\": 5000\r\n    }\r\n  },\r\n  \"autoclickObj\": {\r\n    \"busboy\": {\r\n      \"name\": \"Grab Busboy\",\r\n      \"description\": \"Grab a busboy from the floor to help you chop. Not very fast, but they've got spirit. +1 chops per second\",\r\n      \"count\": 0,\r\n      \"cost\": 500,\r\n      \"perSecIncrease\": 1\r\n    },\r\n    \"newCook\": {\r\n      \"name\": \"Hire another Cook\",\r\n      \"description\": \"Hire another prep cook. +10 chops per second\",\r\n      \"count\": 0,\r\n      \"cost\": 5000,\r\n      \"perSecIncrease\": 10\r\n    },\r\n    \"autochopper\": {\r\n      \"name\": \"Automated Chopper\",\r\n      \"description\": \"Basic autochopper. Loud, but can chop 25 onions a second\",\r\n      \"count\": 0,\r\n      \"cost\": 25000,\r\n      \"perSecIncrease\": 25\r\n    },\r\n    \"angryMonkeys\": {\r\n      \"name\": \"Herd of angry monkeys with knives\",\r\n      \"description\": \"Not necessarily up to food code, but they have the fervor. Can chop 100 onions per second\",\r\n      \"count\": 0,\r\n      \"cost\": 100000,\r\n      \"perSecIncrease\": 100\r\n    },\r\n    \"oldPrepCook\": {\r\n      \"name\": \"One (1) old prep cook\",\r\n      \"description\": \"They've been doing this longer than you or your parents have been alive, just get out of the way. Can chop 750 onions per second.\",\r\n      \"count\": 0,\r\n      \"cost\": 500000,\r\n      \"perSecIncrease\": 750\r\n    },\r\n    \"deluxeChopper\": {\r\n      \"name\": \"The Deluxe Autochopping system\",\r\n      \"description\": \"This top of the line system recently released by Onions Inc. can chop 2500 onions per second, but requires the purchase of an entire building to house it\",\r\n      \"count\": 0,\r\n      \"cost\": 1000000,\r\n      \"perSecIncrease\": 2500\r\n    }\r\n  },\r\n  \"autoclickUpObj\": {\r\n    \"busboyHype\": {\r\n      \"name\": \"Hype up your Busboys\",\r\n      \"description\": \"Encourage the busboys to chop faster!! Increases busboy chop speed by 1 onion per second\",\r\n      \"count\": 0,\r\n      \"cost\": 4200,\r\n      \"upgrades\": \"busboy\",\r\n      \"increase\": 1\r\n    },\r\n    \"cookBonus\": {\r\n      \"name\": \"Give Cook a Bonus\",\r\n      \"description\": \"Give your cooks a bonus!! Increases cook chop speed by 3 onions per second\",\r\n      \"count\": 0,\r\n      \"cost\": 12500,\r\n      \"upgrades\": \"newCook\",\r\n      \"increase\": 3\r\n    },\r\n    \"greaseChopper\": {\r\n      \"name\": \"Grease your Autochopper\",\r\n      \"description\": \"Maker sure the autochopper is running smoothly!! Increases chop speed by 5 onions per second\",\r\n      \"count\": 0,\r\n      \"cost\": 30000,\r\n      \"upgrades\": \"autochopper\",\r\n      \"increase\": 5\r\n    }\r\n  },\r\n  \"managersObj\": {\r\n    \"knifeSharpener\": {\r\n      \"name\": \"Knife Sharpener\",\r\n      \"description\": \"Sharpen your knives regularly! Automatically purchases the Paring knife and Chef's Knife upgrades\",\r\n      \"owned\": false,\r\n      \"on\": false,\r\n      \"cost\": 10000,\r\n      \"upgrades\": [\"paringKnife\", \"chefsKnife\"],\r\n      \"upgradeType\": \"clickUpgObj\"\r\n    },\r\n    \"FOHTrainer\": {\r\n      \"name\": \"Front of House Trainer\",\r\n      \"description\": \"Trains Front of House to use knives! Automatically purchases the 'Grab Busboy' autoclicker\",\r\n      \"owned\": false,\r\n      \"on\": false,\r\n      \"cost\": 25000,\r\n      \"upgrades\": [\"busboy\"],\r\n      \"upgradeType\": \"autoclickObj\"\r\n    },\r\n    \"trainer\": {\r\n      \"name\": \"Knife Arts Trainer\",\r\n      \"description\": \"Helps you hone your skills! Automatically purchases the Ambidexterity and Train Knife Skills upgrades\",\r\n      \"owned\": false,\r\n      \"on\": false,\r\n      \"cost\": 65000,\r\n      \"upgrades\": [\"ambidextrous\", \"knifeTraining\"],\r\n      \"upgradeType\": \"clickUpgObj\"\r\n    },\r\n    \"martialtrainer\": {\r\n      \"name\": \"Martial Arts Trainer\",\r\n      \"description\": \"Helps with your martial skills! Automatically purchases the Arm Glaives, Headbutting, and Ninja training upgrades\",\r\n      \"owned\": false,\r\n      \"on\": false,\r\n      \"cost\": 86000,\r\n      \"upgrades\": [\"armGlaives\", \"headbutting\", \"ninjaTraining\"],\r\n      \"upgradeType\": \"clickUpgObj\"\r\n    },\r\n    \"mechanic\": {\r\n      \"name\": \"Mechanic\",\r\n      \"description\": \"Helps you maintain your machines! Automatically purchases the Automated Chopper upgrade\",\r\n      \"owned\": false,\r\n      \"on\": false,\r\n      \"cost\": 100000,\r\n      \"upgrades\": [\"autochopper\"],\r\n      \"upgradeType\": \"autoclickObj\"\r\n    },\r\n    \"monkeyWrangler\": {\r\n      \"name\": \"Monkey Wrangler\",\r\n      \"description\": \"helps wrangle your monkeys so they stop attacking passerby! Automatically purchases the Herd of Angry Monkeys with Knives autoclicker\",\r\n      \"owned\": false,\r\n      \"on\": false,\r\n      \"cost\": 250000,\r\n      \"upgrades\": [\"angryMonkeys\"],\r\n      \"upgradeType\": \"autoclickObj\"\r\n    }\r\n  }\r\n}\r\n","class StatsView {\r\n  #onionPerClick = document.querySelector(\"#onion-per-click\");\r\n  #onionPerSecond = document.querySelector(\"#auto-onion-per-second\");\r\n  #totalOnionsStat = document.querySelector(\"#total-onions\");\r\n  #totalClicksStat = document.querySelector(\"#total-clicks\");\r\n  #count = document.querySelector(\"#count\");\r\n  #btnChop = document.querySelector(\"#onions\");\r\n\r\n  updatePerClick = function (stats) {\r\n    this.#onionPerClick.textContent = stats.clickStr;\r\n  };\r\n\r\n  updatePerSecond = function (stats) {\r\n    this.#onionPerSecond.textContent = stats.onionsPerSec;\r\n  };\r\n\r\n  updateTotalOnions = function (stats) {\r\n    this.#totalOnionsStat.textContent = stats.totalOnions;\r\n  };\r\n\r\n  updateTotClicks = function (stats) {\r\n    this.#totalClicksStat.textContent = stats.numClicks;\r\n  };\r\n\r\n  updateOnions = function (stats) {\r\n    this.#count.textContent = stats.onions;\r\n    this.updateTotalOnions(stats);\r\n  };\r\n\r\n  updateAll = function (stats) {\r\n    this.updateOnions(stats);\r\n    this.updateTotClicks(stats);\r\n    this.updateTotalOnions(stats);\r\n    this.updatePerSecond(stats);\r\n    this.updatePerClick(stats);\r\n  };\r\n\r\n  addHandlerChop(handler) {\r\n    this.#btnChop.addEventListener(\"click\", handler);\r\n  }\r\n}\r\n\r\nexport default new StatsView();\r\n","import * as helpers from \"../helpers.js\";\r\n\r\nclass UpgradePaneView {\r\n  #clickUpgradesDiv = document.querySelector(\"#click-strength\");\r\n  #autoPurchasesDiv = document.querySelector(\"#autoclick\");\r\n  #autoUpgradesDiv = document.querySelector(\"#auto-up\");\r\n  #managersDiv = document.querySelector(\"#managers\");\r\n  #upgradePanes = document.querySelectorAll(\".upgrades-pane\");\r\n  #upgradesContainer = document.querySelector(\".upgrades\");\r\n  #tabNav = document.querySelector(\"#upgrade-select\");\r\n\r\n  #btnUpgTabs = document.querySelectorAll(\".upgrade-tab-btn\");\r\n\r\n  constructor() {\r\n    this.#tabNav.addEventListener(\"click\", this.tabNav.bind(this));\r\n  }\r\n\r\n  tabNav(e) {\r\n    if (!e.target.classList.contains(\"upgrade-tab-btn\")) return;\r\n    this.#showUpgradePane(e.target);\r\n  }\r\n\r\n  insertTable(div, markup) {\r\n    div.querySelector(\"tbody\").insertAdjacentHTML(\"beforeend\", markup);\r\n  }\r\n\r\n  generateAllTabsMarkup(model) {\r\n    this.insertTable(\r\n      this.#clickUpgradesDiv,\r\n      this.#generateRegPaneMarkup(model.clickUpgObj, \"click-strength-upgrade\")\r\n    );\r\n    this.insertTable(\r\n      this.#autoPurchasesDiv,\r\n      this.#generateRegPaneMarkup(model.autoclickObj, \"autoclicker\")\r\n    );\r\n    this.insertTable(\r\n      this.#autoUpgradesDiv,\r\n      this.#generateRegPaneMarkup(model.autoclickUpObj, \"autoclickUp\")\r\n    );\r\n    this.insertTable(\r\n      this.#managersDiv,\r\n      this.#generateManagerMarkup(model.managersObj)\r\n    );\r\n  }\r\n\r\n  #generateRegPaneMarkup(obj, type) {\r\n    let markup = \"\";\r\n    for (const [upgrade, data] of Object.entries(obj)) {\r\n      markup += `\r\n        <tr class=\"${type} upgrade\" id=\"${upgrade}\">\r\n          <th scope=\"row\" class=\"upg-name\">${data.name}</th>\r\n          <td>${data.description}</td>\r\n          <td class=\"count\">${data.count}</td>\r\n          <td class=\"cost\">${helpers.displayNum(data.cost)}</td>\r\n          <td><button class=\"buy\">Buy</button></td>\r\n        </tr>\r\n        `;\r\n    }\r\n    return markup;\r\n  }\r\n\r\n  #generateManagerMarkup(obj) {\r\n    let markup = \"\";\r\n    for (const [manager, data] of Object.entries(obj)) {\r\n      markup += `\r\n        <tr class=\"manager upgrade\" id=\"${manager}\">\r\n          <th class=\"upg-name\">${data.name}</th>\r\n          <td>${data.description}</td>\r\n          <td class=\"owned\">${data.owned ? \"Yes\" : \"No\"}</td>\r\n          <td class=\"cost\">${helpers.displayNum(data.cost)}</td>\r\n          <td><button class=\"buy\">Buy</button></td>\r\n          <td>\r\n            <label class=\"switch\">\r\n              <input type=\"checkbox\" class=\"toggleOnOff\" disabled=\"disabled\">\r\n              <span class=\"slider\"></span>\r\n            </label>\r\n          </td>\r\n        </tr>`;\r\n    }\r\n    return markup;\r\n  }\r\n\r\n  #showUpgradePane = function (btn) {\r\n    //hide all panes, reset all buttons\r\n    this.#upgradePanes.forEach((div) => div.classList.add(\"hidden\"));\r\n    this.#btnUpgTabs.forEach((btn) => btn.classList.remove(\"selected\"));\r\n\r\n    //show selected pane and hightlihght clicked button\r\n    btn.classList.add(\"selected\");\r\n    document\r\n      .querySelector(`.upgrades-pane--${btn.dataset.pane}`)\r\n      .classList.remove(\"hidden\");\r\n  };\r\n\r\n  addHandlerBuy(handler) {\r\n    this.#upgradesContainer.addEventListener(\"click\", function (e) {\r\n      if (!e.target.classList.contains(\"buy\")) return;\r\n      handler(e.target);\r\n    });\r\n  }\r\n\r\n  addHandlerToggleManager(handler) {\r\n    this.#managersDiv.addEventListener(\"change\", function (e) {\r\n      if (!e.target.classList.contains(\"toggleOnOff\")) return;\r\n      handler(e.target);\r\n    });\r\n  }\r\n\r\n  updateCostCount(upgrade, element) {\r\n    //increment count\r\n    upgrade.count++;\r\n    element.querySelector(\".count\").textContent = `${upgrade.count}`;\r\n    upgrade.cost = Math.floor(upgrade.cost * 1.2);\r\n    element.querySelector(\".cost\").textContent = `${helpers.displayNum(\r\n      upgrade.cost\r\n    )}`;\r\n  }\r\n}\r\n\r\nexport default new UpgradePaneView();\r\n"],"names":["parcelHelpers","require","_modelJs","_statsViewJs","_upgradePaneViewJs","onionClick","addOnions","stats","clickStr","_statsViewJsDefault","default","updateOnions","click","updateTotClicks","decrementOnions","cost","onions","buyClickStrengthUpgrade","upgrade","element","document","querySelector","state","clickUpgObj","clickIncrease","_upgradePaneViewJsDefault","updateCostCount","updatePerClick","buyAutoclicker","autoclickObj","onionsPerSec","perSecIncrease","updatePerSecond","buyAutoclickUp","autoclickUpObj","upgrades","increase","perSec","clicker","data","Object","entries","count","console","log","recalculatePerSecond","upgBuyMap","Map","managersObj","canAfford","owned","on","style","display","textContent","toggle","classList","add","disabled","checked","buyUpgrade","parent","closest","id","forEach","val","key","map","contains","toggleManager","manager","autochopFunc","managerPurchaseMap","managerHandler","upgradeType","get","loadLocalStorage","offlineOnions","calculateOfflineOnions","alert","controlOfflineOnions","generateAllTabsMarkup","updateAll","setInterval","saveLocalStorage","addHandlerChop","addHandlerBuy","addHandlerToggleManager","init","displayNum","num","exports","interopDefault","a","__esModule","defineInteropFlag","defineProperty","value","exportAll","source","dest","keys","hasOwnProperty","enumerable","export","destName","_dataJson","totalOnions","numClicks","lastSaveTime","Date","getTime","localStorage","setItem","JSON","stringify","Math","floor","statsLocal","parse","getItem","dataLocal","price","module","onionPerClick","onionPerSecond","totalOnionsStat","totalClicksStat","btnChop","this","updateTotalOnions","handler","addEventListener","_helpersJs","clickUpgradesDiv","autoPurchasesDiv","autoUpgradesDiv","managersDiv","upgradePanes","querySelectorAll","upgradesContainer","tabNav","btnUpgTabs","constructor","bind","e","target","showUpgradePane","insertTable","div","markup","insertAdjacentHTML","model","generateRegPaneMarkup","generateManagerMarkup","obj","type","name","description","obj1","btn","remove","dataset","pane"],"version":3,"file":"index.a5a4bf4c.js.map"}